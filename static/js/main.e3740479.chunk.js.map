{"version":3,"sources":["components/Tasks/Task.jsx","components/Columns/Column.jsx","redux/actions/columns.js","redux/actions/tasks.js","components/AddColumsForm/AddColumnsForm.jsx","components/Columns/Columns.jsx","components/Header/Header.jsx","App.js","redux/reducers/columns.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Task","text","className","Column","title","tasks","id","addTask","deleteColumn","columnIndex","useState","isInputShown","setIsInputShown","valueInput","setValueInput","dispatch","useDispatch","handleOnAddTask","alert","handleOnCancelTask","handleOnDeleteColumn","draggableId","index","provided","draggableProps","ref","innerRef","dragHandleProps","onClick","droppableId","type","droppableProps","map","task","placeholder","onChange","e","target","value","addColumn","name","payload","AddColumnsForm","onAddColumn","isFormShown","setIsFormShown","handleOnAddColumn","handleOnCancelColumn","keyCode","console","log","Columns","columnsList","useSelector","columns","React","useEffect","onDragEnd","result","startTaskIndex","endTaskIndex","destination","source","startColumnIndex","endColumnIndex","reorderColumns","moveTask","direction","style","gridTemplateColumns","length","column","Header","App","initialState","uuid","columnsReducer","state","action","newColumn","filter","splice","startColumn","endColumn","push","findIndex","newState","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3740479.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = ({ text }) => {\r\n  return <div className=\"task\">{text}</div>;\r\n};\r\n\r\nexport default Task;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Droppable, Draggable, DragDropContext } from \"react-beautiful-dnd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport \"./Column.css\";\r\nimport Task from \"../Tasks/Task\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst Column = ({ title, tasks, id, addTask, deleteColumn, columnIndex }) => {\r\n  const [isInputShown, setIsInputShown] = useState(false);\r\n  const [valueInput, setValueInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnAddTask = () => {\r\n    if (valueInput) {\r\n      dispatch(addTask(id, valueInput));\r\n    } else {\r\n      alert(\"Input the task\");\r\n    }\r\n    handleOnCancelTask();\r\n  };\r\n\r\n  const handleOnCancelTask = () => {\r\n    setValueInput(\"\");\r\n    setIsInputShown(false);\r\n  };\r\n\r\n  const handleOnDeleteColumn = () => {\r\n    dispatch(deleteColumn(id));\r\n    // console.log(12);\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={id} index={columnIndex}>\r\n      {(provided) => (\r\n        <li\r\n          {...provided.draggableProps}\r\n          ref={provided.innerRef}\r\n          className=\"columnWrapper\"\r\n        >\r\n          <div {...provided.dragHandleProps} className=\"columnTitle\">\r\n            {title}\r\n            <button className=\"closeButton\" onClick={handleOnDeleteColumn}>\r\n              Ã—\r\n            </button>\r\n          </div>\r\n          {/* {title} */}\r\n          <Droppable droppableId={id} type=\"task\">\r\n            {(provided) => (\r\n              <Fragment>\r\n                <ul\r\n                  className=\"tasks\"\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {tasks.map((task, index) => (\r\n                    <Draggable\r\n                      key={task.id}\r\n                      draggableId={task.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided) => (\r\n                        <li\r\n                          key={index}\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <Task text={task.title} />\r\n                        </li>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <li>\r\n                    {isInputShown ? (\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"input\"\r\n                          onChange={(e) => {\r\n                            setValueInput(e.target.value);\r\n                          }}\r\n                        />\r\n                        <div className=\"taskButtons\">\r\n                          <button\r\n                            className=\"addTaskButton\"\r\n                            onClick={handleOnAddTask}\r\n                          >\r\n                            Add task\r\n                          </button>\r\n                          <button\r\n                            className=\"cancelTaskButton\"\r\n                            onClick={handleOnCancelTask}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <button\r\n                          className=\"showInputFormButton\"\r\n                          onClick={() => setIsInputShown(true)}\r\n                        >\r\n                          Add task\r\n                        </button>\r\n                      </Fragment>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n              </Fragment>\r\n            )}\r\n          </Droppable>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default Column;\r\n","export const addColumn = (name) => ({\r\n  type: \"ADD_COLUMN\",\r\n  payload: name,\r\n});\r\n\r\nexport const deleteColumn = (columnIndex) => ({\r\n  type: \"DELETE_COLUMN\",\r\n  payload: columnIndex,\r\n});\r\n\r\nexport const reorderColumns = (\r\n  draggableId,\r\n  startColumnIndex,\r\n  endColumnIndex\r\n) => ({\r\n  type: \"REORDER_COLUMNS\",\r\n  payload: { draggableId, startColumnIndex, endColumnIndex },\r\n});\r\n","export const reorderTask = (\r\n  // state,\r\n  columnIndex,\r\n  startTaskIndex,\r\n  endTaskIndex\r\n) => {\r\n  return {\r\n    type: \"REORDER_TASK\",\r\n    payload: {\r\n      //   state,\r\n      columnIndex,\r\n      startTaskIndex,\r\n      endTaskIndex,\r\n    },\r\n  };\r\n};\r\n\r\nexport const moveTask = (\r\n  //   state,\r\n  startColumnIndex,\r\n  startTaskIndex,\r\n  endColumnIndex,\r\n  endTaskIndex\r\n) => ({\r\n  type: \"MOVE_TASK\",\r\n  payload: {\r\n    // state,\r\n    startColumnIndex,\r\n    startTaskIndex,\r\n    endColumnIndex,\r\n    endTaskIndex,\r\n  },\r\n});\r\n\r\nexport const addTask = (columnIndex, title) => ({\r\n  type: \"ADD_TASK\",\r\n  payload: { columnIndex, title },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./AddColumnsForm.css\";\r\n\r\nconst AddColumnsForm = ({ onAddColumn }) => {\r\n  const [isFormShown, setIsFormShown] = useState(false);\r\n  const [valueInput, setValueInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOnAddColumn = () => {\r\n    if (valueInput) {\r\n      dispatch(onAddColumn(valueInput));\r\n    } else {\r\n      alert(\"Input the column name\");\r\n    }\r\n    handleOnCancelColumn();\r\n  };\r\n\r\n  const handleOnCancelColumn = () => {\r\n    setValueInput(\"\");\r\n    setIsFormShown(false);\r\n  };\r\n\r\n  return isFormShown ? (\r\n    <div className=\"column\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => {\r\n          if (e.keyCode === 13) handleOnAddColumn();\r\n          console.log(e.keyCode);\r\n          setValueInput(e.target.value);\r\n        }}\r\n      />\r\n      <div className=\"buttons\">\r\n        <button className=\"addColumnButton\" onClick={handleOnAddColumn}>\r\n          Add column\r\n        </button>\r\n        <button className=\"cancelColumnButton\" onClick={handleOnCancelColumn}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"secondaryButton\" onClick={() => setIsFormShown(true)}>\r\n      + Add new column\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddColumnsForm;\r\n","import React from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport Column from \"./Column\";\r\nimport \"./Columns.css\";\r\n\r\nimport {\r\n  addColumn,\r\n  deleteColumn,\r\n  reorderColumns,\r\n} from \"../../redux/actions/columns\";\r\nimport { reorderTask, moveTask, addTask } from \"../../redux/actions/tasks\";\r\nimport AddColumnForm from \"../AddColumsForm/AddColumnsForm\";\r\n\r\nconst Columns = () => {\r\n  const dispatch = useDispatch();\r\n  const columnsList = useSelector(({ columns }) => columns);\r\n\r\n  React.useEffect(() => {\r\n    //dispatch(addColumn(\"fri\"));\r\n  }, []);\r\n\r\n  const handleOnTaskDrag = (result) => {\r\n    // console.log(result);\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return;\r\n\r\n    if (type === \"column\") {\r\n      dispatch(reorderColumns(draggableId, source.index, destination.index));\r\n    }\r\n    if (type === \"task\") {\r\n      if (destination.droppableId === source.droppableId) {\r\n        dispatch(\r\n          reorderTask(destination.droppableId, source.index, destination.index)\r\n        );\r\n      } else {\r\n        dispatch(\r\n          moveTask(\r\n            source.droppableId,\r\n            source.index,\r\n            destination.droppableId,\r\n            destination.index\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"columns\">\r\n      <DragDropContext onDragEnd={handleOnTaskDrag}>\r\n        <Droppable\r\n          droppableId=\"allColumns\"\r\n          direction=\"horizontal\"\r\n          type=\"column\"\r\n        >\r\n          {(provided) => (\r\n            <ul\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              className=\"columnsList\"\r\n              style={{\r\n                gridTemplateColumns: `repeat(${\r\n                  columnsList.length + 1\r\n                },${\"13vw\"})`,\r\n              }} //repeat\r\n            >\r\n              {columnsList.map((column, index) => (\r\n                <Column\r\n                  key={column.id}\r\n                  title={column.title}\r\n                  tasks={column.tasks}\r\n                  id={column.id}\r\n                  addTask={addTask}\r\n                  deleteColumn={deleteColumn}\r\n                  columnIndex={index}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n              <li>\r\n                <AddColumnForm onAddColumn={addColumn} />\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   //console.log(state.columns);\r\n//   return {\r\n//     columns: state.columns,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addColumn: (name) => {\r\n//       console.log(name);\r\n//       return dispatch(addColumn(name));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default Columns;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return <div className=\"header\">React Trello</div>;\r\n}\r\n\r\nexport default Header;\r\n","import \"./App.css\";\nimport React from \"react\";\n\nimport { Header, Columns } from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div>\n        <Header />\n      </div>\n      <div>\n        <Columns />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import uuid from \"react-uuid\";\r\n\r\nconst initialState = [\r\n  {\r\n    id: uuid(),\r\n    title: \"To do now\",\r\n    tasks: [\r\n      { id: uuid(), title: \"Wash the dishes\" },\r\n      { id: uuid(), title: \"Buy a bread\" },\r\n      { id: uuid(), title: \"Start a new project\" },\r\n    ],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: \"To do later\",\r\n    tasks: [{ id: uuid(), title: \"Hang out with friends\" }],\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: \"Done\",\r\n    tasks: [{ id: uuid(), title: \"Clean up the room\" }],\r\n  },\r\n];\r\n\r\nconst columnsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COLUMN\": {\r\n      return [\r\n        ...state,\r\n        {\r\n          id: uuid(),\r\n          title: action.payload,\r\n          tasks: [],\r\n        },\r\n      ];\r\n    }\r\n    case \"REORDER_TASK\": {\r\n      //console.log(action.payload);\r\n      let newColumn = state.filter(\r\n        (column) => column.id === action.payload.columnIndex\r\n      )[0];\r\n      //console.log(newColumn);\r\n\r\n      newColumn.tasks.splice(\r\n        action.payload.endTaskIndex,\r\n        0,\r\n        newColumn.tasks.splice(action.payload.startTaskIndex, 1)[0]\r\n      );\r\n\r\n      return state.map((column, index) =>\r\n        index === action.payload.columnIndex ? newColumn : column\r\n      );\r\n    }\r\n    case \"MOVE_TASK\": {\r\n      let startColumn = state.filter(\r\n        (column) => column.id === action.payload.startColumnIndex\r\n      )[0];\r\n      let endColumn = state.filter(\r\n        (column) => column.id === action.payload.endColumnIndex\r\n      )[0];\r\n\r\n      //console.log(startColumn, endColumn);\r\n\r\n      let task = startColumn.tasks.splice(action.payload.startTaskIndex, 1)[0];\r\n\r\n      endColumn.tasks.splice(action.payload.endTaskIndex, 0, task);\r\n      startColumn.tasks.splice(action.payload.startTaskIndex, 0);\r\n\r\n      return state.map((column, index) =>\r\n        index === action.payload.startColumnIndex\r\n          ? startColumn\r\n          : index === action.payload.endColumnIndex\r\n          ? endColumn\r\n          : column\r\n      );\r\n    }\r\n    case \"ADD_TASK\": {\r\n      let newColumn = state.filter(\r\n        (column) => column.id === action.payload.columnIndex\r\n      )[0];\r\n      // console.log(action.payload.columnIndex, state);\r\n      newColumn.tasks.push({ id: uuid(), title: action.payload.title });\r\n\r\n      return state.map((column) =>\r\n        column.id === action.payload.columnIndex ? newColumn : column\r\n      );\r\n    }\r\n\r\n    case \"DELETE_COLUMN\": {\r\n      let index = state.findIndex((column) => column.id === action.payload);\r\n      // console.log(action.payload, state, index);\r\n      let newState = [...state];\r\n      newState.splice(index, 1);\r\n      // console.log(newState);\r\n      return newState;\r\n    }\r\n\r\n    case \"REORDER_COLUMNS\": {\r\n      // console.log(state);\r\n      let newState = [...state];\r\n      let newColumn = newState.filter(\r\n        (column) => action.payload.draggableId === column.id\r\n      )[0];\r\n      newState.splice(action.payload.startColumnIndex, 1);\r\n\r\n      newState.splice(action.payload.endColumnIndex, 0, newColumn);\r\n\r\n      // console.log(newState);\r\n\r\n      return newState;\r\n      // return state.map((column, index) =>\r\n      //   index === action.payload.columnIndex ? newColumn : column\r\n      // );\r\n\r\n      // console.log(\r\n      //   action.payload.startColumnIndex,\r\n      //   action.payload.endColumnIndex,\r\n      //   startColumn\r\n      // );\r\n\r\n      // return state;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default columnsReducer;\r\n","import columnsReducer from \"./columns\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  columns: columnsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}